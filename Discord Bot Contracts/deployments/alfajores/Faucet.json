{
  "address": "0x28cAeE0590eACC7c84558633D4cD4c511814bd7F",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Faucet_NoBalanceInFaucet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeLock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentTime",
          "type": "uint256"
        }
      ],
      "name": "Faucet_WalletInTimeLock",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFaucetCeloBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getWalletTimeLockCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf02f99e14815661a688a831d6656b0bd7d3e2b305a8546642043751f11b454a6",
  "receipt": {
    "to": null,
    "from": "0xe66d5D2158CbF77bFdCDB2131D5eB8FF50046D77",
    "contractAddress": "0x28cAeE0590eACC7c84558633D4cD4c511814bd7F",
    "transactionIndex": 1,
    "gasUsed": "386053",
    "logsBloom": "0x
    "blockHash": "0x852a60e10c9185ecff12462b161ba9785816dd2bb36436e29eef6c0196fec777",
    "transactionHash": "0xf02f99e14815661a688a831d6656b0bd7d3e2b305a8546642043751f11b454a6",
    "logs": [],
    "blockNumber": 14538480,
    "cumulativeGasUsed": "558746",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1131b4af92575f1fd681c18a24755aea",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Faucet_NoBalanceInFaucet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeLock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"}],\"name\":\"Faucet_WalletInTimeLock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFaucetCeloBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getWalletTimeLockCheck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/celoFaucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/celoFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nerror Faucet_WalletInTimeLock(\\r\\n    address sender,\\r\\n    uint256 timeLock,\\r\\n    uint256 currentTime\\r\\n);\\r\\nerror Faucet_NoBalanceInFaucet();\\r\\nerror Faucet_NotEnoughBalanceInUserWallet(address sender, uint256 value);\\r\\nerror Faucet_SomethingWentWrong();\\r\\nerror Faucet_InsufficientAllowance();\\r\\n\\r\\ncontract Faucet {\\r\\n    address owner;\\r\\n    mapping(address => uint256) private s_timeLocksCelo;\\r\\n    uint256 private constant CELO_PER_WITHDRAW = 0.1 ether;\\r\\n    uint256 private constant TIME_LOCK_PERIOD = 1 days;\\r\\n\\r\\n    event Deposit(address indexed sender, uint256 indexed value);\\r\\n    event Withdraw(address indexed receiver, uint256 indexed value);\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function deposit() public payable {\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw(address user) public {\\r\\n        if (\\r\\n            !(s_timeLocksCelo[user] == 0) &&\\r\\n            s_timeLocksCelo[user] > block.timestamp\\r\\n        ) {\\r\\n            revert Faucet_WalletInTimeLock(\\r\\n                user,\\r\\n                s_timeLocksCelo[user],\\r\\n                block.timestamp\\r\\n            );\\r\\n        }\\r\\n\\r\\n        if (address(this).balance == 0) {\\r\\n            revert Faucet_NoBalanceInFaucet();\\r\\n        }\\r\\n\\r\\n        s_timeLocksCelo[user] = block.timestamp + TIME_LOCK_PERIOD;\\r\\n        payable(user).transfer(CELO_PER_WITHDRAW);\\r\\n        emit Withdraw(user, CELO_PER_WITHDRAW);\\r\\n    }\\r\\n\\r\\n\\r\\n    // recieve function\\r\\n    receive() external payable {\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // getters\\r\\n\\r\\n    function getWalletTimeLockCheck(address user)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_timeLocksCelo[user];\\r\\n    }\\r\\n\\r\\n    function getFaucetCeloBalance() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x65b3c6aca48c5fd0f9b65cf0441530cb54b9b47aa79760b0181d60c713263385\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105a5806100606000396000f3fe6080604052600436106100435760003560e01c806351cff8d914610093578063677b988f146100bc578063c17fa90d146100e7578063d0e30db0146101245761008e565b3661008e57343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3005b600080fd5b34801561009f57600080fd5b506100ba60048036038101906100b59190610465565b61012e565b005b3480156100c857600080fd5b506100d161036b565b6040516100de91906104ab565b60405180910390f35b3480156100f357600080fd5b5061010e60048036038101906101099190610465565b610373565b60405161011b91906104ab565b60405180910390f35b61012c6103bc565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156101bc575042600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156102415780600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426040517f963214b1000000000000000000000000000000000000000000000000000000008152600401610238939291906104d5565b60405180910390fd5b6000470361027b576040517f032d277f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620151804261028a919061053b565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f1935050505015801561031b573d6000803e3d6000fd5b5067016345785d8a00008173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a350565b600047905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061043282610407565b9050919050565b61044281610427565b811461044d57600080fd5b50565b60008135905061045f81610439565b92915050565b60006020828403121561047b5761047a610402565b5b600061048984828501610450565b91505092915050565b6000819050919050565b6104a581610492565b82525050565b60006020820190506104c0600083018461049c565b92915050565b6104cf81610427565b82525050565b60006060820190506104ea60008301866104c6565b6104f7602083018561049c565b610504604083018461049c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054682610492565b915061055183610492565b92508282019050808211156105695761056861050c565b5b9291505056fea26469706673582212205df796702276e06507977b09c1e3aa243138bf290fba7bad3ab8d3f2b2bbe9b364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c806351cff8d914610093578063677b988f146100bc578063c17fa90d146100e7578063d0e30db0146101245761008e565b3661008e57343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3005b600080fd5b34801561009f57600080fd5b506100ba60048036038101906100b59190610465565b61012e565b005b3480156100c857600080fd5b506100d161036b565b6040516100de91906104ab565b60405180910390f35b3480156100f357600080fd5b5061010e60048036038101906101099190610465565b610373565b60405161011b91906104ab565b60405180910390f35b61012c6103bc565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156101bc575042600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156102415780600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426040517f963214b1000000000000000000000000000000000000000000000000000000008152600401610238939291906104d5565b60405180910390fd5b6000470361027b576040517f032d277f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620151804261028a919061053b565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f1935050505015801561031b573d6000803e3d6000fd5b5067016345785d8a00008173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a350565b600047905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061043282610407565b9050919050565b61044281610427565b811461044d57600080fd5b50565b60008135905061045f81610439565b92915050565b60006020828403121561047b5761047a610402565b5b600061048984828501610450565b91505092915050565b6000819050919050565b6104a581610492565b82525050565b60006020820190506104c0600083018461049c565b92915050565b6104cf81610427565b82525050565b60006060820190506104ea60008301866104c6565b6104f7602083018561049c565b610504604083018461049c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054682610492565b915061055183610492565b92508282019050808211156105695761056861050c565b5b9291505056fea26469706673582212205df796702276e06507977b09c1e3aa243138bf290fba7bad3ab8d3f2b2bbe9b364736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 102,
        "contract": "contracts/celoFaucet.sol:Faucet",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 106,
        "contract": "contracts/celoFaucet.sol:Faucet",
        "label": "s_timeLocksCelo",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}